{"ast":null,"code":"import { useState } from \"react\";\nconst useForm = (initialFieldValues, validate) => {\n  const [values, setValues] = useState(initialFieldValues);\n  const [errors, setErrors] = useState({});\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const fieldValues = {\n      [name]: value\n    };\n    setValues({\n      ...values,\n      ...fieldValue\n    });\n    validate();\n  };\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  };\n};\nexport default useForm;","map":{"version":3,"names":["useState","useForm","initialFieldValues","validate","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","fieldValues","fieldValue"],"sources":["C:/Users/prasa/Desktop/Projects/Candidate/WebAPI/react-app/src/components/useForm.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate) => {\r\n  const [values, setValues] = useState(initialFieldValues);\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    const fieldValues = {[name]: value}\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue\r\n    })\r\nvalidate()\r\n  }\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleInputChange\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAGA,CAACC,kBAAkB,EAAEC,QAAQ,KAAK;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACE,kBAAkB,CAAC;EACxD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMQ,iBAAiB,GAAGC,CAAC,IAAI;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,MAAMC,WAAW,GAAG;MAAC,CAACH,IAAI,GAAGC;IAAK,CAAC;IACnCN,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,GAAGU;IACL,CAAC,CAAC;IACNX,QAAQ,CAAC,CAAC;EACR,CAAC;EAED,OAAO;IACLC,MAAM;IACNC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAED,eAAeP,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}